<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-3.0.xsd" >

	<!-- 配置整合Mybatis的过程 -->
	<!-- 1：配置数据库相关参数  properties的属性：${url}         -->
	<context:property-placeholder location="classpath:jdbc.properties"/> <!-- 加载配置参数的文件所在地 -->

	<!-- 2:数据库连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!-- 配置连接池属性 -->
		<!-- c3p0连接池的基本属性 -->
		<property name="driverClass" value="${driver}"/>
		<property name="jdbcUrl" value="${url}"/>
		<property name="user" value="${username}"/>
		<property name="password" value="${password}"/>

		<!--连接池的私有属性根据高并发应用场景 -->
		<property name="maxPoolSize" value="30"/><!--连接池最多保留30个对象 -->
		<property name="minPoolSize" value="10"/>

		<!-- 关闭连接后不自动commit -->
		<property name="autoCommitOnClose" value="false"/>
		<!-- 获取连接超时时间 -->
		<property name="checkoutTimeout" value="6000"/>
		<!-- 当前获取连接失败重试次数 -->
		<property name="acquireRetryAttempts" value="2"/>
	</bean>


	<!-- 使用框架趋势：约定大于配置，将相应的文件放在对应包下，通过已配置项可以自动扫描 -->
	<!-- 3：配置 SqlSessionFactory对象  真正的整合配置-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!--注入数据库连接池  -->
		<property name="dataSource" ref="dataSource"/>
		<!-- 配置Mybatis全局配置文件：mybatis-config.xml -->
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		<!-- 扫描entity包 使用别名org.seckill.entity -->
		<property name="typeAliasesPackage" value="entity"/>
		<!-- 扫描Sql配置文件：mapper需要的xml文件 -->
		<property name="mapperLocations" value="classpath:mapper/*.xml"/>
	</bean>

	<!-- 4: 配置扫描Dao接口包，动态实现Dao接口，注入到spring容器中-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!--注入SqlSessionFactory 使用sqlSessionFactoryBeanName可以在用的时候再找sqlSessionFactory，防止提前初始化-->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
		<!-- 给出需要扫描Dao接口包-->
		<property name="basePackage" value="dao"/>
	</bean>

</beans>